CREATE DATABASE TIENDAONLINE;


USE TIENDAONLINE;

CREATE TABLE USUARIOS(
    COD_USUARIO INT PRIMARY KEY AUTO_INCREMENT,
    CORREO VARCHAR(250) NOT NULL,
    PASS VARCHAR(100) NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    APELLIDO1 VARCHAR(100) NOT NULL,
    APELLIDO2 VARCHAR(100),
    TELEFONO VARCHAR(100) NOT NULL,
    FNACI DATE NOT NULL,
    ROL ENUM('CLIENTE','ADMIN')
);

CREATE TABLE CATEGORIAS(
    COD_CATEGORIA INT PRIMARY KEY AUTO_INCREMENT,
    NOM_CATEGORIA VARCHAR(100),
    TIPOIVA DOUBLE
);

CREATE TABLE SUBCATEGORIAS(
    COD_SUBCATEGORIA INT PRIMARY KEY AUTO_INCREMENT,
    COD_CATEGORIA INT NOT NULL,
    NOM_SUBCATEGORIA VARCHAR(100),
    FOREIGN KEY (COD_CATEGORIA) REFERENCES CATEGORIAS(COD_CATEGORIA)
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PRODUCTOS(
    COD_PRODUCTO INT PRIMARY KEY AUTO_INCREMENT,
    NOM_PRODUCTO VARCHAR(200) NOT NULL,
    MARCA VARCHAR(250) NOT NULL,
    MODELO VARCHAR(200) NOT NULL,
    DESC_PRODUCTO LONGTEXT,
    PRECIO DOUBLE NOT NULL,
    COD_CATEGORIA INT NOT NULL,
    FOREIGN KEY (COD_CATEGORIA) REFERENCES CATEGORIAS(COD_CATEGORIA)
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PRODUCTOSFOTOS(
    COD_PRODUCTO INT NOT NULL,
    URL_FOTO VARCHAR(250) NOT NULL,
    DESC_FOTO VARCHAR(250),
    FOREIGN KEY (COD_PRODUCTO) REFERENCES PRODUCTOS(COD_PRODUCTO) 
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE COMPRAS(
    COD_COMPRA VARCHAR(30) ,
    COD_PRODUCTO INT NOT NULL,
    COD_USUARIO INT NOT NULL,
    CANTPRODUCTO INT NOT NULL,
    IMPORTE DOUBLE,
    FCOMPRA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (COD_USUARIO) REFERENCES USUARIOS(COD_USUARIO)
    ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (COD_PRODUCTO) REFERENCES PRODUCTOS(COD_PRODUCTO)
    ON DELETE CASCADE ON UPDATE CASCADE
);

USE TIENDAONLINE;
DROP TABLE COMPRAS;
DROP TABLE FACTURAS;
DROP TABLE METODOPAGOS;
DROP TABLE ENVIOS;


CREATE TABLE FACTURAS (
    COD_FACTURA INT PRIMARY KEY AUTO_INCREMENT,
    NUM_FACTURA VARCHAR(30),
    COD_COMPRA VARCHAR(30) NOT NULL,
    COD_METODOPAGO INT NOT NULL,
    IMPORTE DOUBLE,
    FFACTURA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    COD_USUARIO INT NOT NULL,
    EMISOR VARCHAR(100),
    
    FOREIGN KEY (COD_METODOPAGO) REFERENCES METODOPAGOS(COD_METODO)
    ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE METODOPAGOS (
    COD_METODO INT PRIMARY KEY AUTO_INCREMENT,
	COD_USUARIO INT NOT NULL,
    METODO VARCHAR(100) NOT NULL,
    NUMERO_CARTA VARCHAR(16) NOT NULL,
    SCADENZA_CARTA DATE NOT NULL,
    TITOLARE_CARTA VARCHAR(200) NOT NULL,
    CVV VARCHAR(4) NOT NULL,
	FOREIGN KEY (COD_USUARIO) REFERENCES USUARIOS(COD_USUARIO)
    ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE ENVIOS(
    COD_ENVIOS INT PRIMARY KEY AUTO_INCREMENT,
    COD_USUARIO INT NOT NULL,
    COD_DIRECCION INT NOT NULL,
    COD_FACTURA INT NOT NULL,
    FENVIOS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FENTREGA DATE,
    ESTADO ENUM('GENERADO','EN_TRANSITO','ENTRAGADO'),
    FOREIGN KEY (COD_USUARIO) REFERENCES USUARIOS(COD_USUARIO)
    ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (COD_FACTURA) REFERENCES FACTURAS(COD_FACTURA)
    ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE DIRECCIONES(
	COD_DIRECCION INT PRIMARY KEY AUTO_INCREMENT,
    COD_USUARIO INT NOT NULL,
	DIRECCION VARCHAR(250) NOT NULL,
    CIUDAD VARCHAR(250) NOT NULL, 
    PROVINCIA VARCHAR(250) NOT NULL,
    PAIS VARCHAR(250) NOT NULL,
    CP VARCHAR(8) NOT NULL

);

CREATE TABLE CARRITOS(
    COD_USUARIO INT NOT NULL,
    COD_PRODUCTO INT NOT NULL,
    CANTPRODUCTO INT NOT NULL,
    ESTADO ENUM('COMPRADO','PENDIENTE','BORRADO'),
    FOREIGN KEY (COD_USUARIO) REFERENCES USUARIOS(COD_USUARIO)
    ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (COD_PRODUCTO) REFERENCES PRODUCTOS(COD_PRODUCTO)
    ON DELETE CASCADE ON UPDATE CASCADE
);


/*FUNCIONES 
CREATE DEFINER=`root`@`localhost` FUNCTION `CALCULA_IMPORTE`(CODIGO_COMPRA VARCHAR(30)) RETURNS double
BEGIN
	DECLARE IMPORTE DOUBLE;
    DECLARE CODIGO VARCHAR(30);
    
    SET IMPORTE = 0;
    
    SET CODIGO = CODIGO_COMPRA;
    
    SET IMPORTE = (SELECT SUM(PRECIO*CANTPRODUCTO) FROM COMPRAS INNER JOIN PRODUCTOS ON COMPRAS.COD_PRODUCTO = PRODUCTOS.COD_PRODUCTO WHERE COMPRAS.COD_COMPRA = CODIGO);
    
RETURN IMPORTE;
END


CREATE DEFINER=`root`@`localhost` FUNCTION `GENERA_ID_COMPRA`(COD_USUARIO INT  ) RETURNS varchar(30) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
BEGIN
    DECLARE TIEMPO  TIMESTAMP;
    DECLARE CODIGO VARCHAR(30);
    DECLARE NOMBRE_AUX VARCHAR(100);
    DECLARE APELLIDO VARCHAR(100);
    DECLARE RESULTADO VARCHAR(30);
    
    SET TIEMPO = CURRENT_TIMESTAMP();
    
    SET NOMBRE_AUX = (SELECT NOMBRE FROM USUARIOS WHERE USUARIOS.COD_USUARIO = COD_USUARIO);
    
    SET APELLIDO = (SELECT APELLIDO1 FROM USUARIOS WHERE USUARIOS.COD_USUARIO = COD_USUARIO);
    
    SET RESULTADO = CONCAT_WS('-', COD_USUARIO, DAY(TIEMPO), HOUR(TIEMPO), MINUTE(TIEMPO), SECOND(TIEMPO), CONCAT(YEAR(TIEMPO), MONTH(TIEMPO)));
    
    RETURN RESULTADO;
END


CREATE DEFINER=`root`@`localhost` FUNCTION `VALIDAR_PRODUCTO_EN_EL_CARRO`(CODIGO_PRODUCTO INT , CORREO_USUARIO VARCHAR(250)) RETURNS int(11)
BEGIN
    DECLARE EXISTE INT;
    DECLARE COD_US INT;

    SET COD_US = (SELECT COD_USUARIO FROM USUARIOS WHERE CORREO = CORREO_USUARIO);

    SET EXISTE = (SELECT COUNT(*) FROM CARRITOS WHERE COD_PRODUCTO = CODIGO_PRODUCTO AND COD_USUARIO = COD_US AND ESTADO = 'PENDIENTE');

    RETURN EXISTE;
END


CREATE DEFINER=`root`@`localhost` FUNCTION `VALIDAR_USUARIO`(COR VARCHAR(250), PAS VARCHAR(250)) RETURNS tinyint(1)
BEGIN
	DECLARE VALIDAR INTEGER;
    DECLARE RESULT BOOLEAN;
    
    SET RESULT = FALSE;
    SET VALIDAR = (SELECT COUNT(*) FROM USUARIOS WHERE CORREO = COR AND PASS = PAS);
    
    IF VALIDAR > 0 THEN 
		SET RESULT = TRUE;
	END IF;
RETURN RESULT;
END

PROCEDIMIENTOS

CREATE DEFINER=`root`@`localhost` PROCEDURE `BORRAR_PRODUCTO_CARRITO`(COD_PRODUCTO INT, CORREO_US VARCHAR(250))
BEGIN
	DECLARE COD_PRO INT;
    DECLARE COD_US INT;
    
    SET COD_PRO = COD_PRODUCTO;
    SET COD_US = (SELECT COD_USUARIO FROM USUARIOS WHERE CORREO = CORREO_US);
    
    UPDATE CARRITOS SET ESTADO = 'BORRADO' WHERE CARRITOS.COD_USUARIO = COD_US AND CARRITOS.COD_PRODUCTO = COD_PRO AND CARRITOS.ESTADO = 'PENDIENTE';
END


CREATE DEFINER=`root`@`localhost` PROCEDURE `DATOSUSUARIOS`(CORREOUS VARCHAR(250))
BEGIN
	SELECT CORREO , NOMBRE, APELLIDO1, APELLIDO2, TELEFONO, FNACI , PASS FROM USUARIOS WHERE CORREO = CORREOUS;
END


CREATE DEFINER=`root`@`localhost` PROCEDURE `DETPRODUCTO`(COD_PRODUCTO_AUX int)
BEGIN
		
        SELECT * FROM PRODUCTOS INNER JOIN PRODUCTOSFOTOS ON PRODUCTOS.COD_PRODUCTO =  PRODUCTOSFOTOS.COD_PRODUCTO INNER JOIN SUBCATEGORIAS ON SUBCATEGORIAS.COD_SUBCATEGORIA = PRODUCTOS.COD_SUBCATEGORIA  INNER JOIN CATEGORIAS ON SUBCATEGORIAS.COD_CATEGORIA = CATEGORIAS.COD_CATEGORIA WHERE PRODUCTOS.COD_PRODUCTO = COD_PRODUCTO_AUX;

END


CREATE DEFINER=`root`@`localhost` PROCEDURE `DOWN_CANTIDAD_PRODUCTO_CARRITO`(COD_PRODUCTO INT, CORREO_US VARCHAR(250))
BEGIN
	DECLARE COD_PRO INT;
    DECLARE COD_US INT;
    DECLARE CANT INT;
    
    SET COD_PRO = COD_PRODUCTO;
    SET COD_US = (SELECT COD_USUARIO FROM USUARIOS WHERE CORREO = CORREO_US);
    SET CANT = (SELECT CANTPRODUCTO FROM CARRITOS WHERE COD_USUARIO = COD_US AND COD_PRODUCTO = COD_PRO AND ESTADO = 'PENDIENTE');
    
    IF (CANT > 1) THEN
		UPDATE CARRITOS SET CANTPRODUCTO = CANTPRODUCTO - 1 WHERE CARRITOS.COD_USUARIO = COD_US AND CARRITOS.COD_PRODUCTO = COD_PRO AND CARRITOS.ESTADO = 'PENDIENTE';
    ELSE IF (CANT = 1) THEN
		UPDATE CARRITOS SET CARRITOS.ESTADO = 'BORRADO'  WHERE CARRITOS.COD_USUARIO = COD_US AND CARRITOS.COD_PRODUCTO = COD_PRO AND CARRITOS.ESTADO = 'PENDIENTE' ;
    END IF;
    END IF;
END


CREATE DEFINER=`root`@`localhost` PROCEDURE `GENERATE_FACTURA`(CODIGO_COMPRA VARCHAR(30))
BEGIN
	
    DECLARE NUM_FACTURA_AUX VARCHAR(30);
    DECLARE importe_total DOUBLE;
    DECLARE COD_USUARIO_AUX INT;
    DECLARE EMISOR_AUX VARCHAR(50);
    
    SET COD_USUARIO_AUX = (SELECT COD_USUARIO FROM COMPRAS WHERE COD_COMPRA = CODIGO_COMPRA LIMIT 1);
    
    SET importe_total = CALCULA_IMPORTE(codigo_compra);
    
    SET EMISOR_AUX = 'FONDO NORTE';
    SET NUM_FACTURA_AUX = (SELECT MAX(COD_FACTURA)+1 FROM FACTURAS);
    
    SET NUM_FACTURA_AUX = CONCAT(NUM_FACTURA_AUX,"/",YEAR(NOW()));
    
    INSERT INTO FACTURAS (NUM_FACTURA, COD_COMPRA, IMPORTE, FFACTURA, COD_USUARIO, EMISOR)
    VALUES (NUM_FACTURA_AUX, codigo_compra, importe_total, CURRENT_TIMESTAMP(), COD_USUARIO_AUX, EMISOR_AUX);
    
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `INSERTAR_COMPRA`(US INT )
BEGIN
	DECLARE CODIGO VARCHAR(30);
    DECLARE CONTADOR INTEGER;
    DECLARE MAX_FILAS INTEGER;
    DECLARE CODIGO_USUARIO INTEGER;
    DECLARE CODIGO_PRODUCTO INTEGER;
    DECLARE CANTIDAD_AUX INTEGER;
    DECLARE FECHACOMPRA TIMESTAMP;
    DECLARE IMPORTE_AUX DOUBLE;
    DECLARE PRECIO DOUBLE;
    
    SET FECHACOMPRA = CURRENT_TIMESTAMP();
    SET CODIGO = (SELECT GENERA_ID_COMPRA(US));
    SET CODIGO_USUARIO = US;
    SET IMPORTE_AUX = 0;
    
    SET CONTADOR = (SELECT COUNT(*) FROM CARRITOS WHERE COD_USUARIO = CODIGO_USUARIO);
    
    
    WHILE CONTADOR > 0 DO 
        SET CODIGO_PRODUCTO = (SELECT COD_PRODUCTO FROM CARRITOS WHERE COD_USUARIO = CODIGO_USUARIO ORDER BY COD_PRODUCTO LIMIT 1);
        SET CANTIDAD_AUX = (SELECT CANTPRODUCTO FROM CARRITOS WHERE COD_USUARIO = CODIGO_USUARIO ORDER BY COD_PRODUCTO LIMIT 1);
        
        SET PRECIO = (SELECT PRECIO FROM PRODUCTOS WHERE COD_PRODUCTO = CODIGO_PRODUCTO);
        
        INSERT INTO COMPRAS (COD_COMPRA, COD_PRODUCTO, COD_USUARIO, CANTPRODUCTO) VALUES
        (CODIGO,CODIGO_PRODUCTO,CODIGO_USUARIO,CANTIDAD_AUX);
        
        DELETE FROM CARRITOS WHERE COD_USUARIO = US AND COD_PRODUCTO = CODIGO_PRODUCTO;
        
        SET CONTADOR = CONTADOR - 1;
    END WHILE;
    
    SET IMPORTE_AUX = (SELECT SUM(PRECIO*CANTPRODUCTO) FROM COMPRAS INNER JOIN PRODUCTOS ON COMPRAS.COD_PRODUCTO = PRODUCTOS.COD_PRODUCTO WHERE COMPRAS.COD_COMPRA = CODIGO);
    SELECT IMPORTE_AUX;
    
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `INSERTAR_PRODUCTO_CARRO`(COD_PRODUCTO INT , CORREO_US_AUX VARCHAR(250))
BEGIN
	DECLARE COD_PRO INT;
    DECLARE COD_US INT;
    DECLARE EXISTE BOOLEAN;
    DECLARE COD_PRO_AUX INT;
    
    DECLARE CONTADOR INT;
    
    SET CONTADOR = 0;
    
    SET COD_US = (SELECT COD_USUARIO FROM USUARIOS WHERE CORREO = CORREO_US_AUX);
    SET COD_PRO = COD_PRODUCTO;
    
    
   SET EXISTE = (SELECT VALIDAR_PRODUCTO_EN_EL_CARRO (COD_PRODUCTO , CORREO_US_AUX));
    
    
    IF NOT  EXISTE THEN 
		INSERT INTO CARRITOS (COD_USUARIO, COD_PRODUCTO, CANTPRODUCTO, ESTADO) VALUES (COD_US, COD_PRO , 1, 'PENDIENTE');
    ELSE 
		CALL UP_CANTIDAD_PRODUCTO_CARRITO(COD_PRODUCTO, CORREO_US_AUX);
	END IF;
    
    
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `LISTACARRITO`( CORREO_US VARCHAR(250))
BEGIN
	DECLARE CODIGO_USUARIO INT;
    
    SET CODIGO_USUARIO = (SELECT COD_USUARIO FROM USUARIOS WHERE CORREO = CORREO_US);
    
    SELECT (PRODUCTOS.PRECIO * CARRITOS.CANTPRODUCTO) AS TOTAL ,PRODUCTOS.COD_PRODUCTO, PRODUCTOS.NOM_PRODUCTO, CARRITOS.CANTPRODUCTO, PRODUCTOS.PRECIO FROM CARRITOS inner join productos on carritos.cod_producto = productos.cod_producto where estado = 'pendiente';
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `LISTAPRODUCTOSPRINCIPAL`()
BEGIN
	SELECT PRODUCTOS.NOM_PRODUCTO,PRODUCTOS.COD_PRODUCTO , PRODUCTOS.PRECIO , SUBCATEGORIAS.COD_SUBCATEGORIA , PRODUCTOSFOTOS.URL_FOTO , PRODUCTOSFOTOS.DESC_FOTO  FROM PRODUCTOS INNER JOIN PRODUCTOSFOTOS ON PRODUCTOS.COD_PRODUCTO = PRODUCTOSFOTOS.COD_PRODUCTO INNER JOIN SUBCATEGORIAS ON SUBCATEGORIAS.COD_SUBCATEGORIA = PRODUCTOS.COD_SUBCATEGORIA WHERE DESC_FOTO = 'princ'; 
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `LISTAPRODUCTOSPRINCIPAL`()
BEGIN
	SELECT PRODUCTOS.NOM_PRODUCTO,PRODUCTOS.COD_PRODUCTO , PRODUCTOS.PRECIO , SUBCATEGORIAS.COD_SUBCATEGORIA , PRODUCTOSFOTOS.URL_FOTO , PRODUCTOSFOTOS.DESC_FOTO  FROM PRODUCTOS INNER JOIN PRODUCTOSFOTOS ON PRODUCTOS.COD_PRODUCTO = PRODUCTOSFOTOS.COD_PRODUCTO INNER JOIN SUBCATEGORIAS ON SUBCATEGORIAS.COD_SUBCATEGORIA = PRODUCTOS.COD_SUBCATEGORIA WHERE DESC_FOTO = 'princ'; 
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `REGISTRAR_CLIENTE`(COR VARCHAR(250),
    PAS VARCHAR(100),
    NOM VARCHAR(100),
    AP1 VARCHAR(100),
    AP2 VARCHAR(100),
    TEL VARCHAR(100),
    FCI DATE)
BEGIN
	DECLARE VALIDACION BOOLEAN;
	
    SET VALIDACION = (SELECT VALIDAR_USUARIO(COR,PAS));
    
    IF VALIDACION = 0 THEN
		INSERT INTO USUARIOS(CORREO,PASS,NOMBRE,APELLIDO1,APELLIDO2,TELEFONO,FNACI,ROL) VALUES (COR,PAS,NOM,AP1,AP2,TEL,FCI,'CLIENTE');
	END IF;
    
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `UP_CANTIDAD_PRODUCTO_CARRITO`(COD_PRODUCTO INT, CORREO_US VARCHAR(250))
BEGIN
	DECLARE COD_PRO INT;
    DECLARE COD_US INT;
    
    SET COD_PRO = COD_PRODUCTO;
    SET COD_US = (SELECT COD_USUARIO FROM USUARIOS WHERE CORREO = CORREO_US);
    
    UPDATE CARRITOS SET CANTPRODUCTO = CANTPRODUCTO + 1 WHERE CARRITOS.COD_USUARIO = COD_US AND CARRITOS.COD_PRODUCTO = COD_PRO AND CARRITOS.ESTADO = 'PENDIENTE';

END 

CREATE DEFINER=`root`@`localhost` TRIGGER `tiendaonline`.`compras_BEFORE_INSERT` BEFORE INSERT ON `compras` FOR EACH ROW
BEGIN

	DECLARE PRECIO_AUX DOUBLE;
    DECLARE IMPORTE_AUX DOUBLE;
    
    SET PRECIO_AUX = ( SELECT PRECIO FROM PRODUCTOS WHERE COD_PRODUCTO = NEW.COD_PRODUCTO);
    
    SET IMPORTE_AUX = PRECIO_AUX * NEW.CANTPRODUCTO;
    
    SET NEW.IMPORTE = IMPORTE_AUX;
    
     UPDATE CARRITOS SET ESTADO = 'COMPRADO' WHERE CARRITOS.COD_PRODUCTO = NEW.COD_PRODUCTO AND CARRITOS.COD_USUARIO = NEW.COD_USUARIO AND ESTADO = 'PENDIENTE';

END



CREATE DEFINER=`root`@`localhost` FUNCTION `CORREOTOID`(CORREO_AUX VARCHAR(250)) RETURNS int(11)
BEGIN
		DECLARE CORREO_US VARCHAR(250);
        
        SET CORREO_US = (SELECT COD_USUARIO FROM USUARIOS WHERE CORREO = CORREO_AUX);
RETURN CORREO_US;
END



CREATE DEFINER=`root`@`localhost` PROCEDURE `INSERTAR_DIRECCION`(
    CORREO VARCHAR(250),
    DIRECCION_AUX VARCHAR(250), 
    CIUDAD_AUX VARCHAR(250),
    PROVINCIA_AUX VARCHAR(250),
    PAIS_AUX VARCHAR(250),
    CP_AUX VARCHAR(8) )
BEGIN
	DECLARE CODIGO_USUARIO INT;
    
    SET CODIGO_USUARIO = CORREOTOID(CORREO);
    
    INSERT INTO DIRECCIONES (COD_USUARIO,DIRECCION,CIUDAD,PROVINCIA,PAIS,CP) VALUES (CODIGO_USUARIO,DIRECCION_AUX,CIUDAD_AUX,PROVINCIA_AUX,PAIS_AUX,CP_AUX);
END


CREATE PROCEDURE LISTAR_DIRECCIONES (CORREO VARCHAR(250))
BEGIN
	DECLARE COD_USUARIO_AUX INT;
    
    SET COD_USUARIO_AUX = (SELECT CORREOTOID(CORREO));
	SELECT * FROM DIRECCIONES WHERE COD_USUARIO = COD_USUARIO_AUX;
END


CREATE DEFINER=`root`@`localhost` PROCEDURE `ADD_METODO_DE_PAGO`( CORREO VARCHAR(250), NUMERO_CARTA_AUX VARCHAR(250), SCADENZA_CARTA_AUX DATE , TITOLARE_CARTA_AUX VARCHAR(250), CVV_AUX VARCHAR(250), METODO_AUX VARCHAR(250))
BEGIN

	DECLARE COD_US VARCHAR(250);
    
    SET COD_US = (SELECT CORREOTOID(CORREO) );

	INSERT INTO METODOPAGOS (COD_USUARIO, METODO , NUMERO_CARTA , SCADENZA_CARTA , TITOLARE_CARTA , CVV) VALUES (COD_US, METODO_AUX,NUMERO_CARTA_AUX,SCADENZA_CARTA_AUX,TITOLARE_CARTA_AUX,CVV_AUX);

END


CREATE PROCEDURE LISTAR_METODO_PAGOS (CORREO VARCHAR(250))
BEGIN

	SELECT * FROM METODOPAGOS WHERE COD_USUARIO = (SELECT CORREOTOID(CORREO));

END


*/


-- Categorías
INSERT INTO CATEGORIAS (NOM_CATEGORIA, TIPOIVA) VALUES 
('Electrónica', 0.16),
('Electrodomésticos', 0.16),
('Accesorios', 0.16);

-- Subcategorías
INSERT INTO SUBCATEGORIAS (COD_CATEGORIA, NOM_SUBCATEGORIA) VALUES 
-- Categoría de Electrónica
(1, 'Teléfonos'),
(1, 'Computadoras'),
(1, 'Televisores'),
(1, 'Cámaras'),
-- Categoría de Electrodomésticos
(2, 'Refrigeradores'),
(2, 'Lavadoras'),
(2, 'Licuadoras'),
(2, 'Microondas'),
-- Categoría de Accesorios
(3, 'Fundas'),
(3, 'Cables'),
(3, 'Auriculares'),
(3, 'Baterías');

select * from subcategorias;
-- Productos
INSERT INTO PRODUCTOS (NOM_PRODUCTO, MARCA, MODELO, DESC_PRODUCTO, PRECIO, COD_CATEGORIA) VALUES
-- Categoría de Electrónica
('iPhone 13', 'Apple', 'iPhone 13', 'Teléfono móvil de última generación', 1200.00, 1),
('MacBook Pro', 'Apple', 'MacBook Pro', 'Laptop de alta gama para profesionales', 2000.00, 1),
('Samsung QLED 4K', 'Samsung', 'Q80T', 'Televisor con tecnología QLED de alta definición', 1500.00, 1),
('Canon EOS R5', 'Canon', 'EOS R5', 'Cámara DSLR profesional con capacidad de grabación 8K', 3500.00, 1),
-- Categoría de Electrodomésticos
('Samsung Side-by-Side', 'Samsung', 'RS65R5401M9', 'Refrigerador de doble puerta con dispensador de agua y hielo', 1800.00, 2),
('LG Lavadora Frontal', 'LG', 'F4J6VY2W', 'Lavadora automática de carga frontal con tecnología AI DD', 800.00, 2),
('Oster Blender Pro', 'Oster', 'BLSTMB-CBG-000', 'Licuadora de alto rendimiento con jarra de vidrio', 120.00, 2),
('Whirlpool Microondas', 'Whirlpool', 'WMR5350DD', 'Microondas con función de cocción rápida y grill', 150.00, 2),
-- Categoría de Accesorios
('Spigen Funda iPhone 13', 'Spigen', 'Liquid Air Armor', 'Funda delgada y resistente para iPhone 13', 20.00, 3),
('AmazonBasics Cable USB-C', 'AmazonBasics', 'AMZ-USBC-03', 'Cable USB-C de 3 pies, 2 unidades', 10.00, 3),
('Sony WH-1000XM4', 'Sony', 'WH-1000XM4', 'Auriculares inalámbricos con cancelación de ruido y sonido de alta resolución', 300.00, 3),
('Anker PowerCore 20000', 'Anker', 'A1271H11', 'Batería externa de gran capacidad para carga rápida', 50.00, 3);


insert into productosfotos(cod_producto, url_foto, desc_foto) values
(2,'https://thumb.pccomponentes.com/w-300-300/articles/1066/10661415/1946-apple-macbook-pro-apple-m2-pro-12-nucleos-16gb-1tb-ssd-162-gris-espacial.jpg', 'princ'),
(1,'https://img.pccomponentes.com/articles/57/578962/128-apple-iphone-13-128gb-blanco-estrella-libre.jpg', 'princ'),
(3,'https://img.pccomponentes.com/articles/1081/10815212/1671-cecotec-v3-series-vqu30085-85-qled-ultrahd-4k-hdr10-smart-tv.jpg',"princ"),
(4,'https://img.pccomponentes.com/articles/1079/10799491/1985-canon-eos-r5-full-frame-45mp-wifi-cuerpo.jpg',"princ"),
(5,'https://img.pccomponentes.com/articles/1074/10749626/1566-samsung-hw-q600c-zf-barra-de-sonido-con-subwoofer-inalambrico-bluetooth-312-canales-34w-negra.jpg',"princ"),
(6,'https://img.pccomponentes.com/articles/1080/10803297/1480-lg-f2dr5s09a1w-lavasecadora-de-carga-frontal-9kg-5kg-e-blanca.jpg',"princ");

insert into productosfotos(cod_producto, url_foto, desc_foto) values
(2, 'https://thumb.pccomponentes.com/w-140-140/articles/66/663946/2847-apple-macbook-pro-apple-m1-pro-16gb-512gb-ssd-162-gris-espacial-comprar.jpg', 'sec'),
(2, 'https://thumb.pccomponentes.com/w-140-140/articles/66/663946/3741-apple-macbook-pro-apple-m1-pro-16gb-512gb-ssd-162-gris-espacial-opiniones.jpg', 'sec'),
(2, 'https://thumb.pccomponentes.com/w-140-140/articles/66/663946/3511-apple-macbook-pro-apple-m1-pro-16gb-512gb-ssd-162-gris-espacial-comprar.jpg', 'sec'),
(2, 'https://thumb.pccomponentes.com/w-140-140/articles/66/663946/6245-apple-macbook-pro-apple-m1-pro-16gb-512gb-ssd-162-gris-espacial-comprar.jpg', 'sec');